
# CASO FINAL

 https://github.com/Jyejii/Caso-Final-.git

 ## 1)     En relación al estado de un objeto, para preservar el principio de encapsulación:

  a)    Los atributos de nuestra clase deben permanecer públicos, para permitir un acceso total a la información que almacenamos en los objetos. Sin embargo, aquellos métodos que realicen operaciones internas (y no deban ser utilizados), deben establecerse como privados.

  b)    Debemos establecer la visibilidad más restrictiva (por ejemplo, privada) en los atributos de una clase. Así, cualquier software que utilice nuestro objeto, sólo accederá al estado de los objetos mediante los métodos que le hayamos permitido utilizar.

 ## Respuesta : b)Debemos establecer la visibilidad más restrictiva (por ejemplo, privada) en los atributos de una clase. Así, cualquier software que utilice nuestro objeto, sólo accederá al estado de los objetos mediante los métodos que le hayamos permitido utilizar.

 ## 2)     Los métodos de una clase no pueden devolver objetos:

   a)    Verdadero

   b)    Falso
 ## Respuesta : b)Falso

 #3)     ¿Cuál de las siguientes características de la programación orientada a objetos está relacionada con la reutilización de código?

  a)    Abstracción

  b)    Herencia

 ## Respuesta: b)Herencia

 # 4)     El tiempo de acceso a un dato en una lista de tipo LinkedList es en el mejor de los casos de:

     a)    O(n)

     b)    O(1)

 ## Respuesta: b)O(1)

 ## 5)     Un algoritmo de ordenación que implemente el método de inserción se basa en la idea de ir seleccionando el número correspondiente en la lista desordenada que se va a insertar en la posición última de la lista ordenada:

   a)    Verdadero

   b)    Falso

 ## Respuesta: b)Falso


 # Ejercicio 2: Explica las diferencias entre una tabla Hash y un árbol. ¿ Cuándo conviene utilizar cada una de estas estructuras?

   Tanto la tabla hash como el árbol son estrucuras de almacenamiento y organizacion de datos. La tabla hash asigna una clave a cada valor,por lo que si necesitas acceder a un valor de forma rapida esta es la mejor opción. Por otro lado, el  árbol esta formado por nodos organizados de manera jerarquica, por lo que esta mas ordenada que la tanga hash.
   En cuanto a sus maneras de funcionar, la insercion de la tabla hash se basa en calcular la posición de la clave utilizando la funcion de dispersión y asignar el elemento en esa posición,en cuanto a la busqueda es lo mismo, se usa la función de dispersión para calcular la posición para encontrar los datos almacenados, por último para eliminar un dato o sustituir simplemente se busca la pósicion de la misma manera y se elimina o sustituye el dato.
   En cambio, el árbol es un poco mas complejo, este se basa en raíces y nodos,su inserción se basa en busacr la posición del nuevo elemento y colocarlo como un nuevo módulo(de forma jerárquica), en cuanto a su búsqueda se basa en recorrer el árbol de foema jeráequica desde las raíces hasta los módulos, por último para eliminar un dato en  un árbol se busca el nodo y se elimina, aunque esto es mucha mas importante que en la tabla hash ya que si eliminas un nodo en un árbol este eliminara todos los nodos que sucedan de el.
   En resumen, si necesitas buscar un dato de forma ràpida la tabla has es mas conveniente,aunque tiene mas riesgos de colisiones, y si necesitas tener los datos ordenados es mejor ópcion el árbol,pero este sera mas lento aunque mas seguro ya que no tiene riesgos de ccolisiones debido a que los datos estan ordenados.

